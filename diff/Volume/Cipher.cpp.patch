--- ./Volume/Cipher.cpp	2012-02-07 14:36:48.000000000 +0400
+++ ../veracrypt_1.17_Source/src/Volume/Cipher.cpp	2016-02-14 12:11:21.000000000 +0300
@@ -1,17 +1,18 @@
 /*
- Copyright (c) 2008-2010 TrueCrypt Developers Association. All rights reserved.
-
- Governed by the TrueCrypt License 3.0 the full text of which is contained in
- the file License.txt included in TrueCrypt binary and source code distribution
- packages.
+ Derived from source code of TrueCrypt 7.1a, which is
+ Copyright (c) 2008-2012 TrueCrypt Developers Association and which is governed
+ by the TrueCrypt License 3.0.
+
+ Modifications and additions to the original source code (contained in this file) 
+ and all other portions of this file are Copyright (c) 2013-2016 IDRIX
+ and are governed by the Apache License 2.0 the full text of which is
+ contained in the file License.txt included in VeraCrypt binary and source
+ code distribution packages.
 */
 
 #include "Platform/Platform.h"
 #include "Cipher.h"
 #include "Crypto/Aes.h"
-#include "Crypto/Blowfish.h"
-#include "Crypto/Des.h"
-#include "Crypto/Cast.h"
 #include "Crypto/Serpent.h"
 #include "Crypto/Twofish.h"
 
@@ -19,7 +20,7 @@
 #	include "Crypto/Aes_hw_cpu.h"
 #endif
 
-namespace TrueCrypt
+namespace VeraCrypt
 {
 	Cipher::Cipher () : Initialized (false)
 	{
@@ -76,9 +77,6 @@
 		l.push_back (shared_ptr <Cipher> (new CipherAES ()));
 		l.push_back (shared_ptr <Cipher> (new CipherSerpent ()));
 		l.push_back (shared_ptr <Cipher> (new CipherTwofish ()));
-		l.push_back (shared_ptr <Cipher> (new CipherBlowfish ()));
-		l.push_back (shared_ptr <Cipher> (new CipherCast5 ()));
-		l.push_back (shared_ptr <Cipher> (new CipherTripleDES ()));
 
 		return l;
 	}
@@ -199,51 +197,6 @@
 			throw CipherInitError (SRC_POS);
 	}
 
-	
-	// Blowfish
-	void CipherBlowfish::Decrypt (byte *data) const
-	{
-		BlowfishEncryptLE (data, data, (BF_KEY *) ScheduledKey.Ptr(), 0);
-	}
-
-	void CipherBlowfish::Encrypt (byte *data) const
-	{
-		BlowfishEncryptLE (data, data, (BF_KEY *) ScheduledKey.Ptr(), 1);
-	}
-
-	size_t CipherBlowfish::GetScheduledKeySize () const
-	{
-		return sizeof (BF_KEY);
-	}
-
-	void CipherBlowfish::SetCipherKey (const byte *key)
-	{
-		BlowfishSetKey ((BF_KEY *) ScheduledKey.Ptr(), static_cast<int> (GetKeySize ()), (unsigned char *) key);
-	}
-
-
-	// CAST5
-	void CipherCast5::Decrypt (byte *data) const
-	{
-		Cast5Decrypt (data, data, (CAST_KEY *) ScheduledKey.Ptr());
-	}
-
-	void CipherCast5::Encrypt (byte *data) const
-	{
-		Cast5Encrypt (data, data, (CAST_KEY *) ScheduledKey.Ptr());
-	}
-
-	size_t CipherCast5::GetScheduledKeySize () const
-	{
-		return sizeof (CAST_KEY);
-	}
-
-	void CipherCast5::SetCipherKey (const byte *key)
-	{
-		Cast5SetKey ((CAST_KEY *) ScheduledKey.Ptr(), static_cast<int> (GetKeySize ()), (unsigned char *) key);
-	}
-
-
 	// Serpent
 	void CipherSerpent::Decrypt (byte *data) const
 	{
@@ -262,29 +215,7 @@
 
 	void CipherSerpent::SetCipherKey (const byte *key)
 	{
-		serpent_set_key (key, static_cast<int> (GetKeySize ()), ScheduledKey);
-	}
-
-
-	// Triple-DES
-	void CipherTripleDES::Decrypt (byte *data) const
-	{
-		TripleDesEncrypt (data, data, (TDES_KEY *) ScheduledKey.Ptr(), 0);
-	}
-
-	void CipherTripleDES::Encrypt (byte *data) const
-	{
-		TripleDesEncrypt (data, data, (TDES_KEY *) ScheduledKey.Ptr(), 1);
-	}
-
-	size_t CipherTripleDES::GetScheduledKeySize () const
-	{
-		return sizeof (TDES_KEY);
-	}
-
-	void CipherTripleDES::SetCipherKey (const byte *key)
-	{
-		TripleDesSetKey (key, GetKeySize(), (TDES_KEY *) ScheduledKey.Ptr());
+		serpent_set_key (key, ScheduledKey);
 	}
 
 
@@ -306,7 +237,7 @@
 
 	void CipherTwofish::SetCipherKey (const byte *key)
 	{
-		twofish_set_key ((TwofishInstance *) ScheduledKey.Ptr(), (unsigned int *) key, static_cast<int> (GetKeySize ()) * 8);
+		twofish_set_key ((TwofishInstance *) ScheduledKey.Ptr(), (unsigned int *) key);
 	}
 
 
