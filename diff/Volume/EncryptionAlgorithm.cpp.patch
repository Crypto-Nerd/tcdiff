--- ./Volume/EncryptionAlgorithm.cpp	2012-02-07 14:36:48.000000000 +0400
+++ ../veracrypt_1.17_Source/src/Volume/EncryptionAlgorithm.cpp	2016-02-14 12:11:21.000000000 +0300
@@ -1,17 +1,19 @@
 /*
- Copyright (c) 2008 TrueCrypt Developers Association. All rights reserved.
-
- Governed by the TrueCrypt License 3.0 the full text of which is contained in
- the file License.txt included in TrueCrypt binary and source code distribution
- packages.
+ Derived from source code of TrueCrypt 7.1a, which is
+ Copyright (c) 2008-2012 TrueCrypt Developers Association and which is governed
+ by the TrueCrypt License 3.0.
+
+ Modifications and additions to the original source code (contained in this file) 
+ and all other portions of this file are Copyright (c) 2013-2016 IDRIX
+ and are governed by the Apache License 2.0 the full text of which is
+ contained in the file License.txt included in VeraCrypt binary and source
+ code distribution packages.
 */
 
 #include "EncryptionAlgorithm.h"
-#include "EncryptionModeCBC.h"
-#include "EncryptionModeLRW.h"
 #include "EncryptionModeXTS.h"
 
-namespace TrueCrypt
+namespace VeraCrypt
 {
 	EncryptionAlgorithm::EncryptionAlgorithm () : Deprecated (false)
 	{
@@ -68,11 +70,6 @@
 		l.push_back (shared_ptr <EncryptionAlgorithm> (new SerpentTwofishAES ()));
 		l.push_back (shared_ptr <EncryptionAlgorithm> (new TwofishSerpent ()));
 
-		l.push_back (shared_ptr <EncryptionAlgorithm> (new AESBlowfish ()));
-		l.push_back (shared_ptr <EncryptionAlgorithm> (new AESBlowfishSerpent ()));
-		l.push_back (shared_ptr <EncryptionAlgorithm> (new Blowfish ()));
-		l.push_back (shared_ptr <EncryptionAlgorithm> (new Cast5 ()));
-		l.push_back (shared_ptr <EncryptionAlgorithm> (new TripleDES ()));
 		return l;
 	}
 
@@ -132,19 +129,33 @@
 		return Mode;
 	}
 
-	wstring EncryptionAlgorithm::GetName () const
+	wstring EncryptionAlgorithm::GetName (bool forGuiDisplay) const
 	{
 		if (Ciphers.size() < 1)
 			throw NotInitialized (SRC_POS);
 
 		wstring name;
 
+		int depth = 0;
 		foreach_reverse_ref (const Cipher &c, Ciphers)
 		{
 			if (name.empty())
 				name = c.GetName();
 			else
-				name += wstring (L"-") + c.GetName();
+			{
+				depth++;
+				if (forGuiDisplay)
+					name += wstring (L"(");
+				else
+					name += wstring (L"-");
+				name += c.GetName();				
+			}
+		}
+		
+		if (forGuiDisplay && depth)
+		{
+			for (int i = 0; i < depth; i++)
+				name += wstring(L")");
 		}
 
 		return name;
@@ -209,31 +220,6 @@
 		Ciphers.push_back (shared_ptr <Cipher> (new CipherAES()));
 
 		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeXTS ()));
-		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeLRW ()));
-		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeCBC ()));
-	}
-
-	// AES-Blowfish
-	AESBlowfish::AESBlowfish ()
-	{
-		Deprecated = true;
-
-		Ciphers.push_back (shared_ptr <Cipher> (new CipherBlowfish ()));
-		Ciphers.push_back (shared_ptr <Cipher> (new CipherAES ()));
-
-		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeCBC ()));
-	}
-
-	// AES-Blowfish-Serpent
-	AESBlowfishSerpent::AESBlowfishSerpent ()
-	{
-		Deprecated = true;
-
-		Ciphers.push_back (shared_ptr <Cipher> (new CipherSerpent ()));
-		Ciphers.push_back (shared_ptr <Cipher> (new CipherBlowfish ()));
-		Ciphers.push_back (shared_ptr <Cipher> (new CipherAES ()));
-
-		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeCBC ()));
 	}
 
 	// AES-Twofish
@@ -243,8 +229,6 @@
 		Ciphers.push_back (shared_ptr <Cipher> (new CipherAES ()));
 
 		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeXTS ()));
-		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeLRW ()));
-		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeCBC ()));
 	}
 
 	// AES-Twofish-Serpent
@@ -255,28 +239,6 @@
 		Ciphers.push_back (shared_ptr <Cipher> (new CipherAES ()));
 
 		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeXTS ()));
-		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeLRW ()));
-		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeCBC ()));
-	}
-
-	// Blowfish
-	Blowfish::Blowfish ()
-	{
-		Deprecated = true;
-		Ciphers.push_back (shared_ptr <Cipher> (new CipherBlowfish()));
-
-		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeLRW ()));
-		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeCBC ()));
-	}
-
-	// CAST5
-	Cast5::Cast5 ()
-	{
-		Deprecated = true;
-		Ciphers.push_back (shared_ptr <Cipher> (new CipherCast5()));
-
-		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeLRW ()));
-		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeCBC ()));
 	}
 
 	// Serpent
@@ -285,8 +247,6 @@
 		Ciphers.push_back (shared_ptr <Cipher> (new CipherSerpent()));
 
 		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeXTS ()));
-		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeLRW ()));
-		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeCBC ()));
 	}
 
 	// Serpent-AES
@@ -296,18 +256,6 @@
 		Ciphers.push_back (shared_ptr <Cipher> (new CipherSerpent ()));
 
 		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeXTS ()));
-		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeLRW ()));
-		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeCBC ()));
-	}
-
-	// Triple-DES
-	TripleDES::TripleDES ()
-	{
-		Deprecated = true;
-		Ciphers.push_back (shared_ptr <Cipher> (new CipherTripleDES()));
-
-		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeLRW ()));
-		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeCBC ()));
 	}
 
 	// Twofish
@@ -316,8 +264,6 @@
 		Ciphers.push_back (shared_ptr <Cipher> (new CipherTwofish()));
 
 		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeXTS ()));
-		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeLRW ()));
-		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeCBC ()));
 	}
 
 	// Twofish-Serpent
@@ -327,8 +273,6 @@
 		Ciphers.push_back (shared_ptr <Cipher> (new CipherTwofish ()));
 
 		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeXTS ()));
-		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeLRW ()));
-		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeCBC ()));
 	}
 
 	// Serpent-Twofish-AES
@@ -339,7 +283,5 @@
 		Ciphers.push_back (shared_ptr <Cipher> (new CipherSerpent ()));
 
 		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeXTS ()));
-		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeLRW ()));
-		SupportedModes.push_back (shared_ptr <EncryptionMode> (new EncryptionModeCBC ()));
 	}
 }
