--- ./Main/Forms/RandomPoolEnrichmentDialog.cpp	2012-02-07 14:36:48.000000000 +0400
+++ ../veracrypt_1.17_Source/src/Main/Forms/RandomPoolEnrichmentDialog.cpp	2016-02-14 12:11:21.000000000 +0300
@@ -1,9 +1,13 @@
 /*
- Copyright (c) 2008-2009 TrueCrypt Developers Association. All rights reserved.
-
- Governed by the TrueCrypt License 3.0 the full text of which is contained in
- the file License.txt included in TrueCrypt binary and source code distribution
- packages.
+ Derived from source code of TrueCrypt 7.1a, which is
+ Copyright (c) 2008-2012 TrueCrypt Developers Association and which is governed
+ by the TrueCrypt License 3.0.
+
+ Modifications and additions to the original source code (contained in this file) 
+ and all other portions of this file are Copyright (c) 2013-2016 IDRIX
+ and are governed by the Apache License 2.0 the full text of which is
+ contained in the file License.txt included in VeraCrypt binary and source
+ code distribution packages.
 */
 
 #include "System.h"
@@ -11,7 +15,7 @@
 #include "Volume/Hash.h"
 #include "RandomPoolEnrichmentDialog.h"
 
-namespace TrueCrypt
+namespace VeraCrypt
 {
 	RandomPoolEnrichmentDialog::RandomPoolEnrichmentDialog (wxWindow* parent) : RandomPoolEnrichmentDialogBase (parent) 
 	{
@@ -29,14 +33,18 @@
 			}
 		}
 
-		ShowBytes (RandomPoolStaticText, RandomNumberGenerator::PeekPool().GetRange (0, 24));
+		HideBytes (RandomPoolStaticText, 24);
 		MouseStaticText->Wrap (Gui->GetCharWidth (MouseStaticText) * 70);
+		
+		CollectedEntropy->SetRange (RNG_POOL_SIZE * 8);
 
 		MainSizer->SetMinSize (wxSize (-1, Gui->GetCharHeight (this) * 24));
 
 		Layout();
 		Fit();
 		Center();
+		
+		MouseEventsCounter = 0;
 
 		foreach (wxWindow *c, this->GetChildren())
 			c->Connect (wxEVT_MOTION, wxMouseEventHandler (RandomPoolEnrichmentDialog::OnMouseMotion), nullptr, this);
@@ -64,12 +72,21 @@
 
 		if (ShowRandomPoolCheckBox->IsChecked())
 			ShowBytes (RandomPoolStaticText, RandomNumberGenerator::PeekPool().GetRange (0, 24));
+		else
+			HideBytes (RandomPoolStaticText, 24);
+
+		/* conservative estimate: 1 mouse move event brings 1 bit of entropy
+		 * https://security.stackexchange.com/questions/32844/for-how-much-time-should-i-randomly-move-the-mouse-for-generating-encryption-key/32848#32848
+		 */
+		ScopeLock lock (AccessMutex);
+		if (MouseEventsCounter < (RNG_POOL_SIZE * 8))
+			CollectedEntropy->SetValue (++MouseEventsCounter);
 	}
 
 	void RandomPoolEnrichmentDialog::OnShowRandomPoolCheckBoxClicked (wxCommandEvent& event)
 	{
 		if (!event.IsChecked())
-			RandomPoolStaticText->SetLabel (L"");
+			HideBytes (RandomPoolStaticText, 24);
 	}
 
 	void RandomPoolEnrichmentDialog::ShowBytes (wxStaticText *textCtrl, const ConstBufferPtr &buffer)
@@ -90,4 +107,16 @@
 			str[i] = L'X';
 		}
 	}
+	
+	void RandomPoolEnrichmentDialog::HideBytes (wxStaticText *textCtrl, size_t len)
+	{
+		wxString str;
+
+		for (size_t i = 0; i < len + 1; ++i)
+		{
+			str += L"**";
+		}
+
+		textCtrl->SetLabel (str.c_str());
+	}
 }
