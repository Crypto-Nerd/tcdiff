--- ./Main/Forms/ChangePasswordDialog.cpp	2012-02-07 14:36:48.000000000 +0400
+++ ../veracrypt_1.17_Source/src/Main/Forms/ChangePasswordDialog.cpp	2016-02-14 12:11:21.000000000 +0300
@@ -1,17 +1,22 @@
 /*
- Copyright (c) 2008-2009 TrueCrypt Developers Association. All rights reserved.
-
- Governed by the TrueCrypt License 3.0 the full text of which is contained in
- the file License.txt included in TrueCrypt binary and source code distribution
- packages.
+ Derived from source code of TrueCrypt 7.1a, which is
+ Copyright (c) 2008-2012 TrueCrypt Developers Association and which is governed
+ by the TrueCrypt License 3.0.
+
+ Modifications and additions to the original source code (contained in this file) 
+ and all other portions of this file are Copyright (c) 2013-2016 IDRIX
+ and are governed by the Apache License 2.0 the full text of which is
+ contained in the file License.txt included in VeraCrypt binary and source
+ code distribution packages.
 */
 
 #include "System.h"
 #include "Main/Main.h"
 #include "Main/GraphicUserInterface.h"
 #include "ChangePasswordDialog.h"
+#include "WaitDialog.h"
 
-namespace TrueCrypt
+namespace VeraCrypt
 {
 	ChangePasswordDialog::ChangePasswordDialog (wxWindow* parent, shared_ptr <VolumePath> volumePath, Mode::Enum mode, shared_ptr <VolumePassword> password, shared_ptr <KeyfileList> keyfiles, shared_ptr <VolumePassword> newPassword, shared_ptr <KeyfileList> newKeyfiles)
 		: ChangePasswordDialogBase (parent), DialogMode (mode), Path (volumePath)
@@ -47,11 +52,11 @@
 			throw ParameterIncorrect (SRC_POS);
 		}
 
-		CurrentPasswordPanel = new VolumePasswordPanel (this, password, keyfiles);
+		CurrentPasswordPanel = new VolumePasswordPanel (this, NULL, password, false, keyfiles, false, true, true, false, true, true);
 		CurrentPasswordPanel->UpdateEvent.Connect (EventConnector <ChangePasswordDialog> (this, &ChangePasswordDialog::OnPasswordPanelUpdate));
 		CurrentPasswordPanelSizer->Add (CurrentPasswordPanel, 1, wxALL | wxEXPAND);
 
-		NewPasswordPanel = new VolumePasswordPanel (this, newPassword, newKeyfiles, false, enableNewPassword, enableNewKeyfiles, enableNewPassword, enablePkcs5Prf);
+		NewPasswordPanel = new VolumePasswordPanel (this, NULL, newPassword, true, newKeyfiles, false, enableNewPassword, enableNewKeyfiles, enableNewPassword, enablePkcs5Prf);
 		NewPasswordPanel->UpdateEvent.Connect (EventConnector <ChangePasswordDialog> (this, &ChangePasswordDialog::OnPasswordPanelUpdate));
 		NewPasswordPanelSizer->Add (NewPasswordPanel, 1, wxALL | wxEXPAND);
 		
@@ -80,21 +85,72 @@
 
 		try
 		{
+			bool bUnsupportedKdf = false;
+			shared_ptr <Pkcs5Kdf> currentKdf = CurrentPasswordPanel->GetPkcs5Kdf(bUnsupportedKdf);
+			if (bUnsupportedKdf)
+			{
+				Gui->ShowWarning (LangString ["ALGO_NOT_SUPPORTED_FOR_TRUECRYPT_MODE"]);
+				return;
+			}
+			int currentPim = CurrentPasswordPanel->GetVolumePim();
+			if (-1 == currentPim)
+			{
+				CurrentPasswordPanel->SetFocusToPimTextCtrl();
+				return;
+			}
+			
 			shared_ptr <VolumePassword> newPassword;
+			int newPim = 0;
 			if (DialogMode == Mode::ChangePasswordAndKeyfiles)
 			{
-				newPassword = NewPasswordPanel->GetPassword();
-				newPassword->CheckPortability();
-
-				if (newPassword->Size() > 0 && newPassword->Size() < VolumePassword::WarningSizeThreshold
-					&& !Gui->AskYesNo (LangString ["PASSWORD_LENGTH_WARNING"], false, true))
+				try
+				{
+					newPassword = NewPasswordPanel->GetPassword();
+				}
+				catch (PasswordException& e)
+				{
+					Gui->ShowWarning (e);
+					NewPasswordPanel->SetFocusToPasswordTextCtrl();				
+					return;
+				}
+				newPim = NewPasswordPanel->GetVolumePim();
+				if (-1 == newPim)
 				{
-					NewPasswordPanel->SetFocusToPasswordTextCtrl();
+					NewPasswordPanel->SetFocusToPimTextCtrl();
 					return;
 				}
+
+				if (newPassword->Size() > 0)
+				{
+					if (newPassword->Size() < VolumePassword::WarningSizeThreshold)
+					{
+						if (newPim > 0 && newPim < 485)
+						{
+							Gui->ShowError ("PIM_REQUIRE_LONG_PASSWORD");						
+							return;
+						}
+
+						if (!Gui->AskYesNo (LangString ["PASSWORD_LENGTH_WARNING"], false, true))
+						{
+							NewPasswordPanel->SetFocusToPasswordTextCtrl();
+							return;
+						}
+					}
+					else if (newPim > 0 && newPim < 485)
+					{
+						if (!Gui->AskYesNo (LangString ["PIM_SMALL_WARNING"], false, true))
+						{
+							NewPasswordPanel->SetFocusToPimTextCtrl();
+							return;
+						}
+					}
+				}
 			}
 			else
+			{
 				newPassword = CurrentPasswordPanel->GetPassword();
+				newPim = CurrentPasswordPanel->GetVolumePim();
+			}
 
 			shared_ptr <KeyfileList> newKeyfiles;
 			if (DialogMode == Mode::ChangePasswordAndKeyfiles || DialogMode == Mode::ChangeKeyfiles)
@@ -102,7 +158,9 @@
 			else if (DialogMode != Mode::RemoveAllKeyfiles)
 				newKeyfiles = CurrentPasswordPanel->GetKeyfiles();
 
-			Gui->UserEnrichRandomPool (this, NewPasswordPanel->GetPkcs5Kdf() ? NewPasswordPanel->GetPkcs5Kdf()->GetHash() : shared_ptr <Hash>());
+			/* force the display of the random enriching interface */
+			RandomNumberGenerator::SetEnrichedByUserStatus (false);
+			Gui->UserEnrichRandomPool (this, NewPasswordPanel->GetPkcs5Kdf(bUnsupportedKdf) ? NewPasswordPanel->GetPkcs5Kdf(bUnsupportedKdf)->GetHash() : shared_ptr <Hash>());
 
 			{
 #ifdef TC_UNIX
@@ -122,9 +180,10 @@
 				});
 #endif
 				wxBusyCursor busy;
-				Core->ChangePassword (Path,	Gui->GetPreferences().DefaultMountOptions.PreserveTimestamps,
-					CurrentPasswordPanel->GetPassword(), CurrentPasswordPanel->GetKeyfiles(),
-					newPassword, newKeyfiles, NewPasswordPanel->GetPkcs5Kdf());
+				ChangePasswordThreadRoutine routine(Path,	Gui->GetPreferences().DefaultMountOptions.PreserveTimestamps,
+					CurrentPasswordPanel->GetPassword(), CurrentPasswordPanel->GetVolumePim(), CurrentPasswordPanel->GetPkcs5Kdf(bUnsupportedKdf), CurrentPasswordPanel->GetTrueCryptMode(),CurrentPasswordPanel->GetKeyfiles(),
+					newPassword, newPim, newKeyfiles, NewPasswordPanel->GetPkcs5Kdf(bUnsupportedKdf), NewPasswordPanel->GetHeaderWipeCount());
+				Gui->ExecuteWaitThreadRoutine (this, &routine);
 			}
 
 			switch (DialogMode)
@@ -168,28 +227,50 @@
 	{
 		bool ok = true;
 
-		bool passwordEmpty = CurrentPasswordPanel->GetPassword()->IsEmpty();
-		bool keyfilesEmpty = !CurrentPasswordPanel->GetKeyfiles() || CurrentPasswordPanel->GetKeyfiles()->empty();
-
-		if (passwordEmpty && keyfilesEmpty)
-			ok = false;
-
-		if (DialogMode == Mode::RemoveAllKeyfiles && (passwordEmpty || keyfilesEmpty))
-			ok = false;
-
-		if (DialogMode == Mode::ChangePasswordAndKeyfiles || DialogMode == Mode::ChangeKeyfiles)
+		try
 		{
-			bool newKeyfilesEmpty = !NewPasswordPanel->GetKeyfiles() || NewPasswordPanel->GetKeyfiles()->empty();
 
-			if (DialogMode == Mode::ChangeKeyfiles
-				&& ((passwordEmpty && newKeyfilesEmpty) || (keyfilesEmpty && newKeyfilesEmpty)))
+			bool passwordEmpty = CurrentPasswordPanel->GetPassword()->IsEmpty();
+			bool keyfilesEmpty = !CurrentPasswordPanel->GetKeyfiles() || CurrentPasswordPanel->GetKeyfiles()->empty();
+
+			if (passwordEmpty && keyfilesEmpty)
+				ok = false;
+			
+			if (CurrentPasswordPanel->GetVolumePim () == -1)
 				ok = false;
 
-			if (DialogMode == Mode::ChangePasswordAndKeyfiles
-				&& ((NewPasswordPanel->GetPassword()->IsEmpty() && newKeyfilesEmpty) || !NewPasswordPanel->PasswordsMatch()))
+			if (DialogMode == Mode::RemoveAllKeyfiles && (passwordEmpty || keyfilesEmpty))
 				ok = false;
+
+			if (DialogMode == Mode::ChangePasswordAndKeyfiles || DialogMode == Mode::ChangeKeyfiles)
+			{
+				bool newKeyfilesEmpty = !NewPasswordPanel->GetKeyfiles() || NewPasswordPanel->GetKeyfiles()->empty();
+
+				if (DialogMode == Mode::ChangeKeyfiles
+					&& ((passwordEmpty && newKeyfilesEmpty) || (keyfilesEmpty && newKeyfilesEmpty)))
+					ok = false;
+
+				if (DialogMode == Mode::ChangePasswordAndKeyfiles
+					&& (	(NewPasswordPanel->GetPassword()->IsEmpty() && newKeyfilesEmpty) 
+						|| 	!NewPasswordPanel->PasswordsMatch()
+						|| 	(NewPasswordPanel->GetVolumePim() == -1)
+						)
+					)
+					ok = false;
+			}
+		}
+		catch (PasswordException&)
+		{
+			ok = false;
 		}
 
 		OKButton->Enable (ok);
+		
+		if (DialogMode == Mode::ChangePasswordAndKeyfiles)
+		{
+			bool pimChanged = (CurrentPasswordPanel->GetVolumePim() != NewPasswordPanel->GetVolumePim());
+			NewPasswordPanel->UpdatePimHelpText(pimChanged);
+		}
+		
 	}
 }
