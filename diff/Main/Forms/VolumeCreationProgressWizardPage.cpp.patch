--- ./Main/Forms/VolumeCreationProgressWizardPage.cpp	2012-02-07 14:36:48.000000000 +0400
+++ ../veracrypt_1.17_Source/src/Main/Forms/VolumeCreationProgressWizardPage.cpp	2016-02-14 12:11:21.000000000 +0300
@@ -1,23 +1,28 @@
 /*
- Copyright (c) 2008-2009 TrueCrypt Developers Association. All rights reserved.
-
- Governed by the TrueCrypt License 3.0 the full text of which is contained in
- the file License.txt included in TrueCrypt binary and source code distribution
- packages.
+ Derived from source code of TrueCrypt 7.1a, which is
+ Copyright (c) 2008-2012 TrueCrypt Developers Association and which is governed
+ by the TrueCrypt License 3.0.
+
+ Modifications and additions to the original source code (contained in this file) 
+ and all other portions of this file are Copyright (c) 2013-2016 IDRIX
+ and are governed by the Apache License 2.0 the full text of which is
+ contained in the file License.txt included in VeraCrypt binary and source
+ code distribution packages.
 */
 
 #include "System.h"
 #include "Main/GraphicUserInterface.h"
 #include "VolumeCreationProgressWizardPage.h"
 
-namespace TrueCrypt
+namespace VeraCrypt
 {
 	VolumeCreationProgressWizardPage::VolumeCreationProgressWizardPage (wxPanel* parent, bool displayKeyInfo)
 		: VolumeCreationProgressWizardPageBase (parent),
 		PreviousGaugeValue (0),
 		ProgressBarRange (1),
 		RealProgressBarRange (1),
-		VolumeCreatorRunning (false)
+		VolumeCreatorRunning (false),
+		MouseEventsCounter (0)
 	{
 		DisplayKeysCheckBox->SetValue (displayKeyInfo);
 #ifdef TC_WINDOWS
@@ -31,6 +36,8 @@
 		ProgressGauge->SetMinSize (wxSize (-1, Gui->GetCharHeight (this) * 2));
 #endif
 
+		CollectedEntropy->SetRange (RNG_POOL_SIZE * 8);
+
 		if (DisplayKeysCheckBox->IsChecked())
 			ShowBytes (RandomPoolSampleStaticText, RandomNumberGenerator::PeekPool(), true);
 		else
@@ -180,4 +187,11 @@
 		RealProgressBarRange = ProgressGauge->GetSize().GetWidth();
 		ProgressGauge->SetRange (RealProgressBarRange);
 	}
+	
+	void VolumeCreationProgressWizardPage::IncrementEntropyProgress ()
+	{
+		ScopeLock lock (AccessMutex);
+		if (MouseEventsCounter < (RNG_POOL_SIZE * 8))
+			CollectedEntropy->SetValue (++MouseEventsCounter);
+	}
 }
