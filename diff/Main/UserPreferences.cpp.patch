--- ./Main/UserPreferences.cpp	2012-02-07 14:36:48.000000000 +0400
+++ ../veracrypt_1.17_Source/src/Main/UserPreferences.cpp	2016-02-14 12:11:21.000000000 +0300
@@ -1,9 +1,13 @@
 /*
- Copyright (c) 2008 TrueCrypt Developers Association. All rights reserved.
-
- Governed by the TrueCrypt License 3.0 the full text of which is contained in
- the file License.txt included in TrueCrypt binary and source code distribution
- packages.
+ Derived from source code of TrueCrypt 7.1a, which is
+ Copyright (c) 2008-2012 TrueCrypt Developers Association and which is governed
+ by the TrueCrypt License 3.0.
+
+ Modifications and additions to the original source code (contained in this file) 
+ and all other portions of this file are Copyright (c) 2013-2016 IDRIX
+ and are governed by the Apache License 2.0 the full text of which is
+ contained in the file License.txt included in VeraCrypt binary and source
+ code distribution packages.
 */
 
 #include "System.h"
@@ -11,7 +15,7 @@
 #include "UserPreferences.h"
 #include "Xml.h"
 
-namespace TrueCrypt
+namespace VeraCrypt
 {
 	void UserPreferences::SetValue (const wxString &cfgText, bool &cfgVar)
 	{
@@ -104,6 +108,24 @@
 			TC_CONFIG_SET (UseKeyfiles);
 			TC_CONFIG_SET (WipeCacheOnAutoDismount);
 			TC_CONFIG_SET (WipeCacheOnClose);
+			
+			SetValue (configMap[L"DefaultTrueCryptMode"], DefaultMountOptions.TrueCryptMode);
+			
+			wstring defaultPrf;
+			SetValue (configMap[L"DefaultPRF"], defaultPrf);
+			
+			shared_ptr <Pkcs5Kdf> savedKdf;
+			try
+			{
+				if (defaultPrf != L"autodetection")
+					savedKdf = Pkcs5Kdf::GetAlgorithm (defaultPrf, DefaultMountOptions.TrueCryptMode);
+			}
+			catch (ParameterIncorrect&)
+			{
+			}
+			
+			DefaultMountOptions.Kdf = savedKdf;
+			DefaultMountOptions.ProtectionKdf = savedKdf;				
 		}
 
 		// Default keyfiles
@@ -200,6 +222,13 @@
 		TC_CONFIG_ADD (UseKeyfiles);
 		TC_CONFIG_ADD (WipeCacheOnAutoDismount);
 		TC_CONFIG_ADD (WipeCacheOnClose);
+		
+		formatter.AddEntry (L"DefaultTrueCryptMode", DefaultMountOptions.TrueCryptMode);	
+			
+		wstring defaultPrf = L"autodetection";
+		if (DefaultMountOptions.Kdf)
+			defaultPrf = DefaultMountOptions.Kdf->GetName ();		
+		formatter.AddEntry (L"DefaultPRF", defaultPrf);
 
 		XmlWriter writer (Application::GetConfigFilePath (GetPreferencesFileName(), true));
 		writer.WriteNode (formatter.XmlConfig);
@@ -219,7 +248,7 @@
 
 			foreach_ref (const Keyfile &keyfile, DefaultKeyfiles)
 			{
-				keyfilesXml.InnerNodes.push_back (XmlNode (L"keyfile", wxString (FilesystemPath (keyfile))));
+				keyfilesXml.InnerNodes.push_back (XmlNode (L"keyfile", wxString (wstring(FilesystemPath (keyfile)))));
 			}
 
 			XmlWriter keyfileWriter (keyfilesCfgPath);
