--- ./Main/Application.cpp	2012-02-07 14:36:48.000000000 +0400
+++ ../veracrypt_1.17_Source/src/Main/Application.cpp	2016-02-14 12:11:21.000000000 +0300
@@ -1,9 +1,13 @@
 /*
- Copyright (c) 2008 TrueCrypt Developers Association. All rights reserved.
-
- Governed by the TrueCrypt License 3.0 the full text of which is contained in
- the file License.txt included in TrueCrypt binary and source code distribution
- packages.
+ Derived from source code of TrueCrypt 7.1a, which is
+ Copyright (c) 2008-2012 TrueCrypt Developers Association and which is governed
+ by the TrueCrypt License 3.0.
+
+ Modifications and additions to the original source code (contained in this file) 
+ and all other portions of this file are Copyright (c) 2013-2016 IDRIX
+ and are governed by the Apache License 2.0 the full text of which is
+ contained in the file License.txt included in VeraCrypt binary and source
+ code distribution packages.
 */
 
 #include "System.h"
@@ -16,7 +20,7 @@
 #endif
 #include "TextUserInterface.h"
 
-namespace TrueCrypt
+namespace VeraCrypt
 {
 	wxApp* Application::CreateConsoleApp ()
 	{
@@ -36,16 +40,16 @@
 
 	FilePath Application::GetConfigFilePath (const wxString &configFileName, bool createConfigDir)
 	{
-		wxStandardPaths stdPaths;
 		DirectoryPath configDir;
 		
 		if (!Core->IsInPortableMode())
 		{
 #ifdef TC_MACOSX
-			wxFileName configPath (L"~/Library/Application Support/TrueCrypt");
+			wxFileName configPath (L"~/Library/Application Support/VeraCrypt");
 			configPath.Normalize();
 			configDir = wstring (configPath.GetFullPath());
 #else
+			wxStandardPaths& stdPaths = wxStandardPaths::Get();
 			configDir = wstring (stdPaths.GetUserDataDir());
 #endif
 		}
@@ -61,12 +65,12 @@
 
 	DirectoryPath Application::GetExecutableDirectory ()
 	{
-		return wstring (wxFileName (wxStandardPaths().GetExecutablePath()).GetPath());
+		return wstring (wxFileName (wxStandardPaths::Get().GetExecutablePath()).GetPath());
 	}
 
 	FilePath Application::GetExecutablePath ()
 	{
-		return wstring (wxStandardPaths().GetExecutablePath());
+		return wstring (wxStandardPaths::Get().GetExecutablePath());
 	}
 
 	void Application::Initialize (UserInterfaceType::Enum type)
