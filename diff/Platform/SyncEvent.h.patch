--- ./Platform/SyncEvent.h	2012-02-07 14:36:48.000000000 +0400
+++ ../veracrypt_1.17_Source/src/Platform/SyncEvent.h	2016-02-14 12:11:21.000000000 +0300
@@ -1,47 +1,51 @@
 /*
- Copyright (c) 2008 TrueCrypt Developers Association. All rights reserved.
-
- Governed by the TrueCrypt License 3.0 the full text of which is contained in
- the file License.txt included in TrueCrypt binary and source code distribution
- packages.
-*/
-
-#ifndef TC_HEADER_Platform_SyncEvent
-#define TC_HEADER_Platform_SyncEvent
-
-#ifdef TC_WINDOWS
-#	include "System.h"
-#else
-#	include <pthread.h>
-#endif
-#include "PlatformBase.h"
-#include "Mutex.h"
-
-namespace TrueCrypt
-{
-	class SyncEvent
-	{
-	public:
-		SyncEvent ();
-		~SyncEvent ();
-
-		void Signal ();
-		void Wait ();
-
-	protected:
-		bool Initialized;
-#ifdef TC_WINDOWS
-		HANDLE SystemSyncEvent;
-#else
-		volatile bool Signaled;
-		pthread_cond_t SystemSyncEvent;
-		Mutex EventMutex;
-#endif
-
-	private:
-		SyncEvent (const SyncEvent &);
-		SyncEvent &operator= (const SyncEvent &);
-	};
-}
-
-#endif // TC_HEADER_Platform_SyncEvent
+ Derived from source code of TrueCrypt 7.1a, which is
+ Copyright (c) 2008-2012 TrueCrypt Developers Association and which is governed
+ by the TrueCrypt License 3.0.
+
+ Modifications and additions to the original source code (contained in this file) 
+ and all other portions of this file are Copyright (c) 2013-2016 IDRIX
+ and are governed by the Apache License 2.0 the full text of which is
+ contained in the file License.txt included in VeraCrypt binary and source
+ code distribution packages.
+*/
+
+#ifndef TC_HEADER_Platform_SyncEvent
+#define TC_HEADER_Platform_SyncEvent
+
+#ifdef TC_WINDOWS
+#	include "System.h"
+#else
+#	include <pthread.h>
+#endif
+#include "PlatformBase.h"
+#include "Mutex.h"
+
+namespace VeraCrypt
+{
+	class SyncEvent
+	{
+	public:
+		SyncEvent ();
+		~SyncEvent ();
+
+		void Signal ();
+		void Wait ();
+
+	protected:
+		bool Initialized;
+#ifdef TC_WINDOWS
+		HANDLE SystemSyncEvent;
+#else
+		volatile bool Signaled;
+		pthread_cond_t SystemSyncEvent;
+		Mutex EventMutex;
+#endif
+
+	private:
+		SyncEvent (const SyncEvent &);
+		SyncEvent &operator= (const SyncEvent &);
+	};
+}
+
+#endif // TC_HEADER_Platform_SyncEvent
